name: Scala Versioned Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    if: github.event_name != 'pull_request'
    name: Build and Test
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.12.12]
        java: [temurin@11]

    runs-on: ${{ matrix.os }}

    steps:

      - name: Ignore line ending differences in git
        if: contains(runner.os, 'windows')
        shell: bash
        run: git config --global core.autocrlf false

      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java (temurin@11)
        if: matrix.java == 'temurin@11'
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 11

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Extract tag name
        id: get_tag_version
        uses: actions/github-script@0.2.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            return context.payload.ref.replace(/refs\/tags\/v/, '');

      - name: compile and package
        shell: bash
        run: |
          sbt ++${{ matrix.scala }} 'version: = ${{ steps.get_tag_version.outputs.result }}' compile package

      - name: Compress target directories
        shell: bash
        run: tar cf targets.tar target project/target

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_tag_version.outputs.result }}
          release_name: Release ${{ steps.get_tag_version.outputs.result }}
          draft: true
          prerelease: false

      - name: Upload target directories
        uses: actions/upload-artifact@v2
        with:
          name: target-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}
          path: targets.tar

#      - name: Upload Release Asset
#        uses: actions/upload-artifact@v2
#        with:
#          name: target-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}-Release-${{ github.ref }}
#          path: targets.tar

